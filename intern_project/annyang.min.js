window.openForm = function () {
    document.getElementById("myForm").style.display = "block";
  };
  
  // Define the closeForm function in the global scope
  window.closeForm = function () {
    document.getElementById("myForm").style.display = "none";
  };
  chrome.runtime.sendMessage({ openUI: true });
  // Create a container for your extension's UI
const uiContainer = document.createElement('div');
uiContainer.innerHTML = `
<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
body {font-family: Arial, Helvetica, sans-serif;}
* {box-sizing: border-box;}


/* Button used to open the chat form - fixed at the bottom of the page */
.open-button {
  background-color: #555;
  color: white;
  padding: 10px 1px;
  border: none;
  cursor: pointer;
  opacity: 0.5;
  position: fixed;
  bottom: 23px;
  right: -30px;
  width: 90px;
}
.open-button:hover{
    right:0px;
    opacity:1;
    background-color:blue
}

/* The popup chat - hidden by default */
.chat-popup {
  display: none;
  position: fixed;
  bottom: 0;
  right: 15px;
  border: 3px solid #f1f1f1;
  z-index: 9;
}

/* Add styles to the form container */
.form-container {
 
  padding: 10px;
  background-color: white;
}

/* Full-width textarea */
.form-container textarea {
  width: 100%;
  padding: 15px;
  margin: 5px 0 22px 0;
  border: none;
  background: #f1f1f1;
  resize: none;
  min-height: 200px;
}

/* When the textarea gets focus, do something */
.form-container textarea:focus {
  background-color: #ddd;
  outline: none;
}

/* Set a style for the submit/send button */
.form-container .btn {
  background-color: #04AA6D;
  color: white;
  padding: 16px 20px;
  border: none;
  cursor: pointer;
  width: 100%;
  margin-bottom:10px;
  opacity: 0.8;
}

/* Add a red background color to the cancel button */
.form-container .cancel {
  background-color: red;
}

/* Add some hover effects to buttons */
.form-container .btn:hover {
  opacity: 1;
}


    .container {
        position: relative;
        width: 100%;
        height: 100%;
      }
      
      #animation-list {
        position: absolute;
        top: 10px;
        left: 10px;
        z-index: 1;
        color: black;
      }
      #file-input {
        position: absolute;
        top: 600px;
        left: 10px;
        z-index: 1;

      }
      
      canvas.webgl {
        position: relative;
        z-index: 0;
      }
      canvas {
        background-color: rgb(21, 21, 183);
      }
      body {
        font-family: Arial, sans-serif;
      }
      #transcription {
        min-height: 200px;
        border: 1px solid #ccc;
        padding: 10px;
        overflow: auto;
      }
      #status {
          margin-top: 10px;
        }
        #status.recording {
          color: green;
        }
        #status:not(.recording) {
          color: red;}
          * 

{
    margin: 0;
    padding: 0;
}

html,
body
{
    overflow: hidden;
    margin-left: 10px;
    margin-right: 10px;
    margin-top: 10px;
   
}

.webgl
{
    position: relative;
    top: 0;
    left: 0;
    outline: none;
  /*  border: #ffbf00 1px solid; */
    
}
#startButton {
    
     
    background-color:#0a0a23;
    color: #fff;
    border:none; 
    border-radius:10px; 
    padding:10px;
    min-height:30px; 
    min-width: 120px;
   
  }
  #playAnimationsButton {
      
        
     background-color:#0a0a23;
     color: #fff;
     border:none; 
     border-radius:10px; 
     padding:10px;
     min-height:30px; 
     min-width: 120px;
     
   }

  #startButton:hover {
    background-color:#002ead;
    transition: 0.7s;
}
#playAnimationsButton:hover {
    background-color:#002ead;
    transition: 0.7s;
}

/* #playAnimationsButton:focus {
    outline-color: transparent;
    outline-style:solid;
    box-shadow: 0 0 0 4px #5a01a7;
    transition: 0.7s; } */

    #startButton:active, #playAnimationsButton:active {
    background-color: #ffbf00;
} 
.transcribedTextContainer{
    border: #002ead 1px solid;
}
      


</style>
</head>
<body>

<!-- <h2>Popup Chat Window</h2>
<p>Click on the button at the bottom of this page to open the chat form.</p>
<p>Note that the button and the form is fixed - they will always be positioned to the bottom of the browser window.</p> -->

<button class="open-button" >Chat</button>

<div class="chat-popup" id="myForm">
  <form  class="form-container"style="height: 700px;width:800px; 
  overflow: auto;">
    
    <h1 style="text-align: center;">LETS TALK SIGNS</h1>
    <script type="module" src="script.js"></script>
    <div class="container">
       
        <canvas class="webgl" id="myCanvas" width="1000" height="400"></canvas>
        <!-- <input type="file" id="file-input" accept=".glb"> -->
        <!-- <div>
            <label for="repeated-sequential-checkbox" style="color: rgb(255, 255, 255);">Repeat Sequentially:</label>
            <input type="checkbox" id="repeated-sequential-checkbox">
        </div> -->
   <!--  <div id="animation-list"> -->
        <!-- Animation checkboxes will be added here -->
   <!--  </div> -->
    
    <!-- <label>
        <input type="checkbox" id="sequentialPlay"> Sequential Play
    </label>
    <label>
        <input type="checkbox" id="allPlay"> All Play
    </label> -->
</div>
<!-- <br><br><br><br> -->

<!-- <div id="interimSentences">
  <p>Interim Sentence 1: <span id="interimSentence1"></span></p>
  <p>Interim Sentence 2: <span id="interimSentence2"></span></p>
  <p>Interim Sentence 3: <span id="interimSentence3"></span></p>
</div> -->

<!-- Element to display the final sentence -->
<!-- div id="finalSentence">
  <p>Final Sentence: <span id="finalSentenceText"></span></p>
</div>
 -->

<!-- <h1>You can check the signs here by your voice input</h1> -->
<!-- Containers for Interim and Final Sentences -->
<div id="interimSentences"></div>
<div id="finalSentence"></div>
  <div id="voiceRecognitionControls">
    <button id="startButton">Start Recording</button>
   <!--  <button id="stopButton" disabled>Play current line</button> -->
    <button id="playAnimationsButton">Play Animations</button>
    <!-- <button id="playButton">Play Next Three Sentences</button> -->
    <h3>current status</h3>
    <div id="status"></div> <br> 
    <h3>your transcripting text will display below</h3>
</div>

  <div id="transcription" style="height: 50px;">
  
  </div>
  <!-- <script src="webextension-polyfill/dist/browser-polyfill.min.js"></script>
 -->
 <h3>the sentence which you spoke will display here</h3>
 <div id="transcribedTextContainer"></div>
 <br><br>
 <h3>The Summarized sentence will display here </h3>
   <div id="summarizecontainer"></div> 
 
  
<!-- 
    <label for="msg"><b>Hello User,
         By clicking on our extension you can use our sign interpretation</b></label> -->
    
   
    <button type="button" class="btncancel" >Close</button>
  </form>
</div>

<script src="index.js"></script>

</body>
</html>
`;
console.log("html have been received")
// Append the container to the current page

document.body.appendChild(uiContainer);
// Attach event listeners to the buttons
document.querySelector(".open-button").addEventListener("click", openForm);
document.querySelector(".btncancel").addEventListener("click", closeForm);